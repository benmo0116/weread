<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wxy.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.wxy.model.Book" >
    <id column="bookID" property="bookid" jdbcType="INTEGER" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="wordcount" property="wordcount" jdbcType="INTEGER" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="bookName" property="bookname" jdbcType="VARCHAR" />
    <result column="bookType" property="booktype" jdbcType="VARCHAR" />
    <result column="bookName2" property="bookname2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bookID, author, wordcount, country, bookName, bookType, bookName2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wxy.model.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from r_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from r_book
    where bookID = #{bookid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from r_book
    where bookID = #{bookid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wxy.model.Book" >
    insert into r_book (bookID, author, wordcount, 
      country, bookName, bookType, 
      bookName2)
    values (#{bookid,jdbcType=INTEGER}, #{author,jdbcType=VARCHAR}, #{wordcount,jdbcType=INTEGER}, 
      #{country,jdbcType=VARCHAR}, #{bookname,jdbcType=VARCHAR}, #{booktype,jdbcType=VARCHAR}, 
      #{bookname2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wxy.model.Book" >
    insert into r_book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        bookID,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="wordcount != null" >
        wordcount,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="bookname != null" >
        bookName,
      </if>
      <if test="booktype != null" >
        bookType,
      </if>
        bookName2,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="wordcount != null" >
        #{wordcount,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="booktype != null" >
        #{booktype,jdbcType=VARCHAR},
      </if>
        #{bookname2,jdbcType=VARCHAR},
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wxy.model.BookExample" resultType="java.lang.Integer" >
    select count(*) from r_book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.wxy.model.Book" >
    update r_book
    <set >
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="wordcount != null" >
        wordcount = #{wordcount,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        bookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="booktype != null" >
        bookType = #{booktype,jdbcType=VARCHAR},
      </if>
      <if test="bookname2 != null" >
        bookName2 = #{bookname2,jdbcType=VARCHAR},
      </if>
    </set>
    where bookID = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wxy.model.Book" >
    update r_book
    set author = #{author,jdbcType=VARCHAR},
      wordcount = #{wordcount,jdbcType=INTEGER},
      country = #{country,jdbcType=VARCHAR},
      bookName = #{bookname,jdbcType=VARCHAR},
      bookType = #{booktype,jdbcType=VARCHAR},
      bookName2 = #{bookname2,jdbcType=VARCHAR}
    where bookID = #{bookid,jdbcType=INTEGER}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from r_book
  </select>
  <select id="exist" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    SELECT count(1)
    FROM r_book
    WHERE bookID = #{bookid,jdbcType=INTEGER}
    LIMIT 1;
  </select>
</mapper>